// Generated by CoffeeScript 1.10.0
(function() {
  var GoogleSearchResult, SearchResult, Sub, Super,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  SearchResult = (function() {
    function SearchResult(data) {
      this.title = data.title;
      this.link = data.link;
      this.extras = data;
    }

    SearchResult.prototype.toHtml = function() {
      return "<a href='" + this.link + "'>" + this.title + "</a>";
    };

    SearchResult.prototype.toJson = function() {
      return JSON.stringify(this.extras);
    };

    return SearchResult;

  })();

  GoogleSearchResult = (function(superClass) {
    extend(GoogleSearchResult, superClass);

    function GoogleSearchResult(data) {
      GoogleSearchResult.__super__.constructor.call(this, data);
      this.content = this.extras.content;
    }

    GoogleSearchResult.prototype.toHtml = function() {
      return (GoogleSearchResult.__super__.toHtml.apply(this, arguments)) + " <div class='snippet'>" + this.content + "</div>";
    };

    return GoogleSearchResult;

  })(SearchResult);

  Super = (function() {
    function Super(name) {
      this.name = name;
    }

    Super.prototype.sayName = function() {
      return console.log(this.name);
    };

    return Super;

  })();

  Sub = (function(superClass) {
    extend(Sub, superClass);

    function Sub() {
      return Sub.__super__.constructor.apply(this, arguments);
    }

    Sub.prototype.consturctor = function(name, age) {
      this.age = age;
      Super(name);
      return true;
    };

    Sub.prototype.sayAge = function() {
      return console.log(this.age);
    };

    return Sub;

  })(Super);

}).call(this);
